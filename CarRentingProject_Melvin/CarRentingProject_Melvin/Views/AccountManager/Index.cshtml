@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Loc
@model PageList<AppUserViewModel>
@using CarRentingProject_Melvin.Areas.Identity.Data
@inject IViewLocalizer Localizer;


@{
    ViewData["Title"] = Loc["User Management"];
    string VerticalLine = " | ";
}

<h1>@Loc["Index"]</h1>


<table class="striped centered responsive-table highlight ">
<form asp-controller="AccountManager" asp-action="Index" method="get">
    <thead>
        <tr>
            <th>
                @Loc["User Name"]
            </th>
            <th>
                @Loc["Firstname"]
            </th>
            <th>
                @Loc["Lastname"]
            </th>
            <th>
                @Loc["Birthday"]
            </th>
            <th>
                @Loc["GenderId"]
            </th>
            <th>
                @Loc["Email"]
            </th>
            <th>
                @Loc["Phone Number"]
            </th>
            <th>
                @Loc["Locked"]

            </th>
            <th colspan=4 class="align-content-center">@Loc["Roles"]</th>
            <th></th>
        </tr>
        <tr>
            <th>
                <input type="text" name="userName" value=@ViewData["userName"] >
            </th>
            <th colspan=2 class="align-content-center">
                <input type="text" name="name" value=@ViewData["name"] >
            </th>
            <th>
                 <input type="text" name="email" value=@ViewData["email"] >
            </th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th>@Loc["Tenant"]</th>
            <th>@Loc["Renter"]</th>
            <th>@Loc["Admin"]</th>
            
             
            <th>
                <input type="submit" value=@Loc["Filter"] >
            </th>
        </tr>
    </thead>
     </form>
    <tbody>

@foreach (var item in Model) {
        <tr>
            <td >
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Birthday)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GenderId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td class="align-content-center show">
                @Html.DisplayFor(modelItem => item.Lockout)
            </td>
            <td class="show">
                @Html.DisplayFor(modelItem => item.Tenant)
            </td>

            <td class="show">
                @Html.DisplayFor(modelItem => item.Renter)
            </td>
            
            <td class="show">
                @Html.DisplayFor(modelItem => item.Admin)     
            </td>
            <td>
                @if (!item.Lockout)
                {
                    <a asp-action="Locking" asp-route-id="@item.Id">@Loc["Lock"]</a> @VerticalLine
                }
                else
                {
                    <a asp-action="Locking" asp-route-id="@item.Id">@Loc["Unlock"]</a> @VerticalLine
                }
                <a asp-action="Roles" asp-route-id="@item.Id">@Loc["Roles"]</a>
            </td>

        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-userName=@ViewData["userName"] 
   asp-route-email=@ViewData["email"]
   asp-route-name=@ViewData["name"]
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
   @Loc["Previous"]
</a>
<a asp-action="Index"
   asp-route-userName=@ViewData["userName"] 
   asp-route-name=@ViewData["name"]
   asp-route-email=@ViewData["email"]
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
   @Loc["Next"]
</a>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}